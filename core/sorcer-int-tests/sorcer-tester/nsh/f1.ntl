#!/usr/bin/env nsh
import sorcer.arithmetic.provider.Adder

codebase artifact:org.sorcer/arithmetic/jar/dl/${sorcer.version}

import sorcer.arithmetic.provider.Multiplier
import sorcer.arithmetic.provider.Subtractor
import sorcer.core.provider.Jobber
import sorcer.service.Deployment.Type
import sorcer.service.Task
import sorcer.util.SOS
//println "Codebase: " + System.getProperty("java.rmi.server.codebase");
// Service Composition f1(f2(f4, f5), f3)

//deploy(configuration("org.sorcer:arithmetic:config:" + SOS.getSorcerVersion()),idle(1))

Task f4 = task("f4", sig("multiply", Multiplier.class, deploy(configuration("org.sorcer:arithmetic:config:" + SOS.getSorcerVersion()),idle(1), Type.SELF)),
	context("multiply", inEnt(path("arg/x1"), 10.0d), inEnt(path("arg/x2"), 50.0d),
		outEnt(path("result/y1"), null)));
		
Task f5 = task("f5", sig("add", Adder.class, deploy(configuration("org.sorcer:arithmetic:config:" + SOS.getSorcerVersion()),idle(1))),
	context("add", inEnt(path("arg/x3"), 20.0d), inEnt(path("arg/x4"), 80.0d),
		outEnt(path("result/y2"), null)));

Task f3 = task("f3", sig("subtract", Subtractor.class, deploy(configuration("org.sorcer:arithmetic:config:" + SOS.getSorcerVersion()),idle(1))),
	context("subtract", inEnt(path("arg/x5"), null), inEnt(path("arg/x6"), null),
		outEnt(path("result/y3"), null)));
		

job("f1", sig("exert", Jobber.class, deploy(idle(1))), job("f2", f4, f5, strategy(Provision.YES, Flow.PAR, Access.PUSH)), f3, strategy(Provision.YES, Flow.SEQ, Access.PUSH),
	pipe(outPoint(f4, path("result/y1")), inPoint(f3, path("arg/x5"))),
	pipe(outPoint(f5, path("result/y2")), inPoint(f3, path("arg/x6"))));

	