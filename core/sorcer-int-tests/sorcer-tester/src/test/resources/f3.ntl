#!/usr/bin/env nsh

@Load('org.sorcer:sml:jar:dl:${sorcer.version}')
import sorcer.arithmetic.provider.Adder;
import sorcer.arithmetic.provider.Multiplier;
import sorcer.arithmetic.provider.Subtractor;
import sorcer.service.Task

//println "Codebase: " + System.getProperty("java.rmi.server.codebase");

// Service Composition f1(f2(f4, f5), f3)

Task f4 = task("f4", sig("multiply", Multiplier.class),
	context("multiply", inEnt("arg/x1", 10.0d), inEnt("arg/x2", 50.0d),
		outEnt("result/y1")));
		
Task f5 = task("f5", sig("add", Adder.class),
	context("add", inEnt("arg/x3", 20.0d), inEnt("arg/x4", 80.0d),
		outEnt("result/y2")));

Task f3 = task("f3", sig("subtract", Subtractor.class),
	context("subtract", inEnt("arg/x5"), inEnt("arg/x6"),
		outEnt("result/y3")));

job("f1", job("f2", f4, f5, strategy(Flow.PAR, Access.PULL)), f3,
	pipe(outPoint(f4, "result/y1"), inPoint(f3, "arg/x5")),
	pipe(outPoint(f5, "result/y2"), inPoint(f3, "arg/x6")));
	