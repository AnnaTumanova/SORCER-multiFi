jar {  
	manifest {
		attributes("Implementation-Title": "SORCER Platform",
                   "Implementation-Version": version)
       }
}

/*sourceSets {
	def dirSet = project.sourceSets.main.java.srcDirs
	dirSet.addAll(rootProject.project(':sorcer-dl').sourceSets.main.java.srcDirs)
//	dirSet.addAll(rootProject.project(':sos-rendezvous').sourceSets.main.java.srcDirs)
//	from <zipfileset src="${rio-dl.lib}/rio-api-${rio.version}.jar" includes="org/rioproject/admin/ServiceActivityProvider.class" />
	main {
		java {
			srcDirs = dirSet
		}
	}
}*/

//sourceSets.main.java.each { println it }

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    compile "net.jini:jsk-platform:${riverVersion}",
            "net.jini:jsk-lib:${riverVersion}",
            "org.apache.river:start:${riverVersion}"
    compile	group: "org.rioproject", name: "rio-platform", version: "${rioVersion}", changing: true
    compile	group: "org.rioproject", name: "rio-lib", version: "${rioVersion}", changing: true
    compile	group: "org.rioproject", name: "rio-api", version: "${rioVersion}", changing: true
    compile "org.rioproject.monitor:monitor-api:${rioVersion}",
			"org.rioproject.cybernode:cybernode-api:${rioVersion}",
            "org.apache.ant:ant:${antVersion}",
            "com.sleepycat:je:${jeVersion}",
            "org.dancres:lockmgr:${lockmgrVersion}",
			"junit:junit:${junitVersion}"
	compile	project(':sorcer-dl')
	compile files("${System.properties['java.home']}/../lib/tools.jar")
    testCompile project(":webster")
}

test {
    systemProperty "java.security.policy", "${project.projectDir.path}/src/test/resources/policy/policy.all"
    systemProperty "sorcer.home", "${project.rootProject.path}/distribution/sorcer-${version}"
}

