#!/usr/bin/env nsh
import sorcer.core.deploy.ServiceDeployment
import sorcer.core.provider.Jobber
import sorcer.service.Strategy
import sorcer.service.Task

/*
 * Copyright to the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import sorcer.util.Sorcer;
import sorcer.arithmetic.provider.Adder
import sorcer.arithmetic.provider.Multiplier
import sorcer.arithmetic.provider.Subtractor

import static sorcer.co.operator.inEnt
import static sorcer.eo.operator.configuration
import static sorcer.eo.operator.context
import static sorcer.eo.operator.deploy
import static sorcer.eo.operator.idle
import static sorcer.eo.operator.inPoint
import static sorcer.eo.operator.job
import static sorcer.eo.operator.maintain
import static sorcer.eo.operator.outPoint
import static sorcer.eo.operator.perNode
import static sorcer.eo.operator.pipe
import static sorcer.eo.operator.result
import static sorcer.eo.operator.sig
import static sorcer.eo.operator.strategy
import static sorcer.eo.operator.task

@Codebase(group='org.sorcer', module='arithmetic', version='${sorcer.version}', classifier='dl')

String configDir = Sorcer.getHome() + "/../../../examples/sml/configs/"

Task f4 = task("f4",
        sig("multiply",
                Multiplier.class,
                deploy(configuration(fork?
                        getConfigDir()+"/multiplier-prv-fork.config":
                        "org.sorcer:deploy-tests:config:"+System.getProperty("sorcer.version")),
                        idle(1),
                        ServiceDeployment.Type.SELF)),
        context("multiply", inEnt("arg/x1", 10.0d),
                inEnt("arg/x2", 50.0d), result("result/y1")));

Task f5 = task("f5",
        sig("add",
                Adder.class,
                deploy(configuration(getConfigDir()+"/AdderProviderConfig.groovy"))),
        context("add", inEnt("arg/x3", 20.0d), inEnt("arg/x4", 80.0d),
                result("result/y2")));

Task f3 = task("f3",
        sig("subtract", Subtractor.class,
                deploy(maintain(2, perNode(2)),
                        idle(1),
                        configuration(getConfigDir()+"/subtractor-prv.config"))),
        context("subtract", inEnt("arg/x5"),
                inEnt("arg/x6"), result("result/y3")));

job("f1", sig("service", Jobber.class, deploy(idle(1))),
        job("f2", f4, f5), f3,
        strategy(Strategy.Provision.YES),
        pipe(outPoint(f4, "result/y1"), inPoint(f3, "arg/x5")),
        pipe(outPoint(f5, "result/y2"), inPoint(f3, "arg/x6")));
