@Codebase(group='org.sorcer', module='arithmetic', version='${sorcer.version}', classifier='dl')
@Codebase(group='org.sorcer', module='arithmetic', version='${sorcer.version}', classifier='prv')

import sorcer.arithmetic.provider.impl.AdderImpl
import sorcer.arithmetic.provider.impl.MultiplierImpl
import sorcer.arithmetic.provider.impl.SubtractorImpl

Model m = model(
        inEnt("multiply/x1", 10.0), inEnt("multiply/x2", 50.0),
        inEnt("add/x1", 20.0), inEnt("add/x2", 80.0),
        srv(sig("multiply", MultiplierImpl.class, result("multiply/out",
                inPaths("multiply/x1", "multiply/x2")))),
        srv(sig("add", AdderImpl.class, result("add/out",
                inPaths("add/x1", "add/x2")))),
        srv(sig("subtract", SubtractorImpl.class, result("model/response",
                inPaths("multiply/out", "add/out")))),
        srv("y1", "multiply/x1"),
        response("subtract"));

dependsOn(m, ent("subtract", paths("multiply", "add")));

